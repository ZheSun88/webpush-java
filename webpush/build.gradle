plugins {
    id 'java-library'

    // Used by release.gradle
    id 'maven-publish'
    id 'signing'
}

group 'nl.martijndwars'
version '5.1.2-SNAPSHOT'

dependencies {
    // For cryptographic operations
    api group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.73'

    // For creating and signing JWT
    api group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.7.9'

    // For parsing JSON
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    // For testing, obviously
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'

    // For running JUnit tests
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'

    // For turning InputStream to String
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    // For reading the demo vapid keypair from a pem file
    testImplementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.73'

    // For verifying Base64Encoder results in unit tests
    testImplementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

compileTestJava {
    sourceCompatibility = 11
}

test {
    useJUnitPlatform()

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
        showStandardStreams true
        exceptionFormat 'full'
    }

    exclude '**/SeleniumTests.class'
}

tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

if (hasProperty('release')) {
    apply from: 'release.gradle'
}
